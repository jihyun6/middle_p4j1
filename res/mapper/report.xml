<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="report">

<!-- 신고 목록 조회 -->
<select id="reportList" parameterType="reportVo" resultType="reportVo">
WITH RankedReports AS (
    SELECT
        R.RE_NO,
        R.BOARD_NO,
        R.MEM_NO,
        M.MEM_NAME,
        R.RE_STATUS,
        R.RE_RECIEPT_DATE,
        R.RE_COUNT,
        '신고사유: ' || LISTAGG(R.RE_REASON, ', ')
            WITHIN GROUP (ORDER BY R.RE_RECIEPT_DATE DESC) || CHR(10) ||
        '상세내용: ' || LISTAGG(R.RE_COMMENT, ', ')
            WITHIN GROUP (ORDER BY R.RE_RECIEPT_DATE DESC) AS groupedContent,
        ROW_NUMBER() OVER (PARTITION BY R.BOARD_NO ORDER BY MAX(R.RE_RECIEPT_DATE) DESC) as rn,
        (SELECT COUNT(*) FROM REPORT WHERE MEM_NO = R.MEM_NO) as totalReportCount
    FROM REPORT R
    LEFT JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
    WHERE R.BOARD_NO IS NOT NULL
    GROUP BY
        R.BOARD_NO,
        R.RE_NO,
        R.MEM_NO,
        M.MEM_NAME,
        R.RE_STATUS,
        R.RE_RECIEPT_DATE, 
        R.RE_COUNT
)
SELECT
    RE_NO as reNo,
    BOARD_NO as boardNo,
    MEM_NO as memNo,
    MEM_NAME as memName,
    RE_STATUS as reStatus,
    RE_RECIEPT_DATE as reRecieptDate,
    RE_COUNT as reCount,
    groupedContent as reComment
    --totalReportCount as reCount
FROM RankedReports
WHERE rn = 1
ORDER BY RE_RECIEPT_DATE DESC
</select>

<select id="reportList1" parameterType="reportVo" resultType="reportVo">
WITH RankedReports AS (
    SELECT
        R.RE_NO,
        R.BOARD_NO,
        R.MEM_NO,
        M.MEM_NAME,
        R.RE_STATUS,
        R.RE_RECIEPT_DATE,
        '신고사유: ' || LISTAGG(R.RE_REASON, ', ')
            WITHIN GROUP (ORDER BY R.RE_RECIEPT_DATE DESC) || CHR(10) ||
        '상세내용: ' || LISTAGG(R.RE_COMMENT, ', ')
            WITHIN GROUP (ORDER BY R.RE_RECIEPT_DATE DESC) AS groupedContent,
        ROW_NUMBER() OVER (PARTITION BY R.BOARD_NO ORDER BY MAX(R.RE_RECIEPT_DATE) DESC) as rn,
        (SELECT COUNT(*) FROM REPORT WHERE MEM_NO = R.MEM_NO) as totalReportCount
    FROM REPORT R
    LEFT JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
    WHERE R.BOARD_NO IS NOT NULL
    GROUP BY
        R.BOARD_NO,
        R.RE_NO,
        R.MEM_NO,
        M.MEM_NAME,
        R.RE_STATUS,
        R.RE_RECIEPT_DATE
)
SELECT
    RE_NO as reNo,
    BOARD_NO as boardNo,
    MEM_NO as memNo,
    MEM_NAME as memName,
    RE_STATUS as reStatus,
    RE_RECIEPT_DATE as reRecieptDate,
    groupedContent as reComment,
    totalReportCount as reCount
FROM RankedReports
WHERE rn = 1
ORDER BY RE_RECIEPT_DATE DESC
</select>




    <!-- 신고 상태 업데이트 -->
    <update id="reportUpdate" parameterType="reportVo">
        UPDATE report
        SET
            RE_COUNT = #{reCount},
            RE_STATUS = #{reStatus}
        WHERE 
            RE_NO = #{reNo}
    </update>

    <!-- 신고 상태만 업데이트 -->
    <update id="updateStatus" parameterType="reportVo">
        UPDATE report
        SET
            RE_STATUS = #{reStatus}
        WHERE 
            RE_NO = #{reNo}
    </update>

    <!-- 신고 횟수 증가 -->
    <update id="increaseCount" parameterType="reportVo">
        UPDATE report
        SET
            RE_COUNT = NVL(RE_COUNT, 0) + 1
        WHERE 
            MEM_NO = #{memNo}
    </update>

    <!-- 게시글 삭제 처리 -->
    <delete id="reportDelete" parameterType="reportVo">
        UPDATE board
        SET
            BOARD_DELYN = 'Y'
        WHERE 
            BOARD_NO = #{boardNo}
    </delete>

    <!-- 동일 게시글에 대한 신고 내역 조회 -->
    <select id="getReportsByBoardNo" parameterType="int" resultType="reportVo">
        SELECT 
            R.RE_NO as reNo,
            R.RE_REASON as reReason,
            R.RE_COMMENT as reComment,
            R.RE_STATUS as reStatus,
            R.RE_RECIEPT_DATE as reRecieptDate,
            R.MEM_NO as memNo,
            M.MEM_NAME as memName,
            R.BOARD_NO as boardNo
        FROM 
            REPORT R
            LEFT JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
        WHERE 
            R.BOARD_NO = #{boardNo}
        ORDER BY 
            R.RE_RECIEPT_DATE DESC
    </select>

	<insert id="reportInsert" parameterType="ReportVo">
	    <selectKey keyProperty="reNo" resultType="int" order="BEFORE">
	        SELECT report_seq.nextval FROM dual
	    </selectKey>
	    
	    INSERT INTO report (
	        re_no,
	        re_reason,
	        re_comment,
	        re_status,
	        re_reciept_date,
	        re_clear_date,
	        mem_no,
	        re_count,
	        board_no
	    ) VALUES (
	        #{reNo},
	        #{reReason},
	        #{reComment},
	        '미처리',
	        SYSDATE,
	        null,
	        #{memNo},
	        0,
	        #{boardNo}
	    )
	</insert>
	
	<!-- 관리자용: 신고 처리상태 업데이트 및 신고횟수 증가 -->
	<update id="updateReportStatus">
	    UPDATE report 
	    SET re_status = '처리완료',
	        re_clear_date = SYSDATE
	    WHERE re_no = #{reNo}
	</update>
	
	
	<!-- 관리자용: 회원의 신고횟수 증가 -->
	<update id="increaseReportCount">
	    UPDATE member 
	    SET report_count = report_count + 1
	    WHERE mem_no = #{memNo}
	</update>
	

	
	
</mapper>